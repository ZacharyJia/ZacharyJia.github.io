<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Zachary's Blog</title><link>https://jiacs.com/post/</link><description>Recent content in Posts on Zachary's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 07 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jiacs.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>四象限理论的再回首</title><link>https://jiacs.com/p/rethink-on-si-xiang-xian-thoery/</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/rethink-on-si-xiang-xian-thoery/</guid><description>四象限理论是我早就了解的时间管理工具之一了，在本科的时候使用一个工具简单实践过，但是当时效果并没有显现出来。这次读《高效能人士的七个习惯》，作者也提到了四象限理论（或许本就是这本书里提出来的？毕竟它已经有30多年的历史了），但是这次是在“要事第一”这个习惯中提出来的。重读四象限法则，结合相应的背景，我似乎又有了新的体会。
四象限法则，我以前一直是把它当作“术”，认为只是根据任务等级进行划分，而且其实划分的尺度也较难掌握。这次，我发现四象限理论也可称为“道”，也就是它也是能够指引/指导我们在工作生活中做出正确的抉择、判断什么该做什么不该做。
过去，事情来了，我把它分门别类放到四象限当中，然后呢？好像到底怎么做也没有什么明确的概念。实际上，四象限理论+要事第一的习惯，指引我们去做的事，是“重要且不紧急”的事情，这样的事情才是一个“高效能人士”平时在做的主要的类型。不重要的事情，无论紧急不紧急，我们都应该尽量避免或减少，可以推却可以分派，此类事情多做无益，徒然浪费精力和时间，并且容易让自己陷入“我很忙碌，我今天过得很充实”的错觉当中。而重要且紧急的事情 ，除了一小部分的确紧急临时发生的之外，其实还有很大的一部分是从重要且不紧急的事情中转换而来的。没错，四象限本质上是一个动态的过程，而非一成不变。随着你的角色、视角的转变，重要和不重要可能会发生改变；而随着时间的推进，不紧急的事情可能也会变成紧急。如果我们过度专注不重要的事情、重要且紧急的事情，那么你会发现很多原来的重要且不紧急的事情，也会变成重要且紧急的事情。最后你会发现，你永远处于不断应付各种紧急事情的境地，到处救火，疲于奔命。然而如果按照真正的四象限理论，如果你把大部分的时间都放在重要且不紧急的事情上，那么你就可以防患于未然，在事情还没有变成紧急状态的时候，就已经准备完成。这种不焦不燥，万事尽在掌握的感觉，也是我们不断追寻的目标。
话说回来，术与道，我还是更倾向于道，单纯的没有理论支撑的术，只是无根之木罢了。有了道，术便可以信手拈来。
要事第一，关注重要且不紧急，未雨绸缪，方为上策。</description></item><item><title>2020年终总结</title><link>https://jiacs.com/p/2020-conclusion/</link><pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/2020-conclusion/</guid><description>2020年，岁在庚子。是年大疫，于国人注定是难以忘记的一年，于我也许是改变命运的一年，时也命也。
又是一年的结束，又是一年的开始。15年开始，每年都点个人总结，算是给自己一个交代。随着年纪的增长，反而越来越觉得难以下笔，总感觉年复一年得堕落，回过头来看看，感觉自己一年里仿佛什么都没有做好，近一两年来尤甚。
首 自己的年纪越来越大了啊，前段时间发现，自己已然虚岁27了，而过了这个年，连周岁也要真的迈进27了。真的是一眨眼就要到30的感觉。这么多年没进社会，一直在学校里度过，真的感觉而立之年离自己好遥远，但是抬眼一看，仿佛真的就在自己眼前了。有些不能接受，却也不得不接受。【曾经年少轻狂无不可为，才知人终有穷尽】，《狐妖小红娘》插曲里的这句歌词有点扎心了，也有点应景。年纪越大越开始明白人生到处是无奈。
2020年，真的是拥抱变化的一年，愿称之为魔幻。快到9月的时候，我曾经写下，这一年真的是没有什么实感，接到开学通知的时候，我才感觉到我的2020仿佛才刚刚开始，但是它已经面目全非了。的确是这样的，2020年跟我的想象完全不一样了，纵使我有留退路做B计划的习惯，也没有预想到2020年的我会是今天这个样子。本来计划好的澳洲留学之行，经历了那么多坎坷之后，办好了签证、买好了机票，就等出发了，没想到命运直接跟我开了个大玩笑，就这么把我按住了。从看到新闻的时候的震惊，到充满希望地不断刷新闻，再到被坏消息不断打击的疲惫，最后变成【一直封着吧，别开了，我真的不想去了】的绝望甚至释怀。人生的确是充满了变化和未知的，然而即使在知道了这样的公理的情况下，去接受现实也是需要勇气和时间的。2020年的第二个重要的改变，就是跟前任的分手。不想多说也不想多提，人的一生总是伴随着无数的相遇与分离，也就有着无数的欢喜与悲伤。从一段感情里走出来是痛苦的，但也是必须经历的。说起来我甚至有些感谢她即使在我的挽留下也没有松口，让我保留最后一点尊严。和平分手，很坚决，很果断，也没有任何的拖拖拉拉，死人一样的前任才是最好的。
学 博士生涯跑步快进了到了第三年，来自毕业和论文的压力仿佛陡然增加了。在决定自己很有可能放弃去澳洲之后，按期毕业的压力就更加沉重了。
今年在科研上唯一的成果就是，终于发表了自己的第一篇论文，虽然是号称水刊的IEEE ACCESS。饶是这么水的期刊，不幸的我还是经历了一遍又一遍的审稿。本来人家说一个月就能发表的，我从19年12月底投稿，到最后6月底发表，正儿八经的花了半年时间，经历了四次审稿，被各种各样的审稿人折磨了一遍又一遍。好事多磨，仿佛成了我这两年的口头禅。
然后今年完成了交大这边的开题，悲惨经历都可以写成故事了，就叫《论如何给自己挖坑》。去年申请的时候，研究生院发现UTS修改了合作协议，把关于毕设题目的要求变成了，两校的毕业论文应该是基于同一科研项目的不同表述，当时觉得，反正交大这边也准备开澳洲的题目了，那就无所谓了，所以就同意了。但是当时也给澳洲提了这个问题，澳洲也同意按照原来的协议，不对毕设题目做出要求。两边的结果先后到来，为了加速最后直接使用了新的协议，加上这条要求（为自己埋好了坑）。按照原本的计划，我今年年初到澳洲，在那边做了半年左右的准备，然后交大这边就直接按照澳洲的车联网题目开题，两边题目一致或大体相同，工作简单。结果因为疫情的原因，没有去到澳洲，在家也没有做好充分的准备。开题的时候只好按照交大这边原来做的数据中心网络方向进行开题。这就意味着，我如果还想要澳洲那边的学位，就必须分别做车联网和数据中心网络两个方向的内容，分别达到UTS和BJTU的博士毕业要求，势必会增加大量的工作量。此外这样做实际上也不太符合协议要求，只不过看起来双方并不太在意这个协议罢了。
10月份的时候，又经历了一次赶DDL的操作。UTS课题组的进度汇报和TRP课程的综述大作业一起来，DDL果然都是聚集到一起的。忙活得焦头烂额，最后分别搞定了两项任务之后，发现两项任务都是水的很，早知道就不花费那么多的精力了，有点太浪费感情了。不过澳洲的课题到目前都没有什么进展，也没有想到什么特别好用的idea，也是让人头疼。明年2月中旬可能还要进行CA1，又是新的焦虑来源。
最后手里还捏着一堆要发的论文，第二篇现在已经只剩下实验部分了，也拖了将近半年了，希望赶紧搞完继续开始挖新坑。
其他 其他的好像也没什么好说的了，毕竟今年本来就感觉缺了好几个月，整个人也整体上都在焦虑和颓废中度过，实在乏善可陈。
2021 接着就到了展望明年的时候，提到未来总是应该充满希望的。那么明年应该对自己再多一些更加美好的期待。
在基础的学术上，目前手里的这篇Retor的论文还是必须要发出来的，看看随便投个什么期刊吧，应该随便了，满足毕业要求就好，现在在学术上已经没有什么特殊的追求了。 然后后续就是考虑机器学习+TPDL的那篇文章，在明年至少应该能确定好文章思路、做好实验然后成稿，争取能发表出来。 然后其他方向的论文就尽量能写一篇是一篇吧，趁着无聊的时候随便写写做做实验，随便发出去算了，idea留着也都是浪费，还不如凑个数。
澳洲那边的进度可能要先糊弄着了，实在是挺麻烦的。如果明年年初能过去的话（概率很小了），还是要多关注一下那边的课题。另外看之前的计划2月份可能要进行CA1了，又要继续冥思苦想idea了。 如果过不去的话，后续是不是就考虑直接放弃澳洲那边，或者是下半年过去待半年，然后交大这边稍微延个期？这个事情后面还是要好好考虑和商量。
另外，还是自己能够过得充实、全面一些，希望能够在这点时间里无论如何多读点书，多运动一些减减肥。
再有就是，如果完全放弃澳洲那边的留学的话，那明年夏天开始就应该要考虑毕业和工作的事宜了。到时候也就进入到一边做毕设（+小论文）一边找工作的状态了，唉~
尾 不念过往，不畏将来。 这是我在修改今年实验室年会的ppt时，放上的一句话，告诉大家也告诉自己。即使现在的生活似乎已经糟糕透顶，但还是要对未来充满期待。不念过往不是忘记过去，而是不要让过去的苦痛拖累自己，打垮自己（说起来，今天本校一个本科生跳了，临走前发了一条长长的朋友圈，唉，一声叹息，我大概是不会走到那一步的）。不畏将来则是面对将来可能到来的苦难，要迎难而上。说起来我应该算是天生的战士了，毕竟永远都在与自己作斗争，无论是否愿意，都要在无尽的焦虑的催促下必须战斗下去。
2020年是命运改变的一年，2021年又何尝不是呢？疫情改变了我原本的计划，但是新的决定又要在2021年继续做出，在这个关键的节点，每一个决定都可能会对以后的人生产生完全不同的影响。但是话说回来，谁又能知道哪个决定是对，哪个是错呢？选哪个最后都可能会后悔，不如选好就坚定地走下去吧。
2021，带着更加沉重的压力，继续前进吧。</description></item><item><title>《深度工作》——如何锻炼深度工作，我的回忆与思考</title><link>https://jiacs.com/p/deep-work/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/deep-work/</guid><description>&lt;p>《深度工作》这本书的作者的主业也是计算机领域进行科研，但是他在提高效率这方面的思考与实践着实让我羡慕。&lt;/p>
&lt;p>上个月就开始看这本书了，但是读了一半又颓废地扔了下来。今天终于重新拿了起来，一口气读完。下面记录了我根据自己的印象回忆出来的书里的一些锻炼深度工作的方法，应该是让我比较有收获、想尝试的一些。&lt;/p></description></item><item><title>文献管理工具的来回折腾</title><link>https://jiacs.com/p/citation-manager/</link><pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/citation-manager/</guid><description>&lt;p>作为一个工具控，总是想找一件趁手的文献管理工具，在各种工具之间摇摆不定，甚至还有自己动手写一套的计划。在折腾了好久之后，最终还是又落入了Readcube Papers的魔爪当中（心疼我的钱包）。&lt;/p></description></item><item><title>雅思考试经验总结</title><link>https://jiacs.com/p/ielts-conclusion/</link><pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/ielts-conclusion/</guid><description>&lt;p>论文写不下去，来写一写雅思经验吧
考完之后，不少人想问问我经验，我当时觉得也没啥经验好分享的，毕竟我也准备的不怎么充分
不过想了想，还是说说自己的经历吧，给大家参考。不过每个人情况不同，请各位自行斟酌，不要怪我误人子弟。&lt;/p></description></item><item><title>微信、支付宝个人收款的一种实现思路</title><link>https://jiacs.com/p/thinking-on-personal-pay/</link><pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/thinking-on-personal-pay/</guid><description>&lt;p>题目里说的个人收款指的不是普通的扫个码，而是说那种可以支持回调的，例如网上商城支付之后，商城可以知道支付状态并且自动修改订单的状态为“已支付”。这种支付的形式，无论是微信、支付宝还是银联，目前都是不对个人开放的，必须有企业资质才能申请。但是对于很多开发者而言，有时候就是一个小小的验证性应用，想要拥有支付功能，而自己又没有企业资质，自然没法申请到微信支付宝这种接口，甚至连第三方的聚合支付（Ping++）也是无法申请的。本文就介绍一种利用个人支付宝（微信也是可以的）自己实现支付功能的思路，成本是一部旧的&lt;strong>安卓手机&lt;/strong>，其他的都是完全免费的，配合支付宝的收款码（提现免费），可以做到&lt;strong>零费率&lt;/strong>。&lt;/p></description></item><item><title>荐书：《编码：隐匿在计算机软硬件背后的语言》</title><link>https://jiacs.com/p/coding-book/</link><pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/coding-book/</guid><description>&lt;p>最近看完了《编码》这本书，大呼过瘾。第一次看这本书的时候，一晚上就看了100多页，难以自拔（当然也是因为前面大部分都是作者放慢速度在引导，以及本身已经拥有了计算机的基础知识）。&lt;/p></description></item><item><title>自己动手编写Wireshark Lua插件解析自定义协议</title><link>https://jiacs.com/p/wireshark-plugin-using-lua/</link><pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/wireshark-plugin-using-lua/</guid><description>&lt;p>搞网络的对于 Wireshark 这个抓包工具应该非常熟悉了，在抓包分析的时候非常好用，很大的一个原因就是 Wireshark 内置了大量的协议解析插件，基本上你叫得上来的协议，Wireshark都能给你解析出来。&lt;/p>
&lt;p>但是啥事儿都有个万一，特别是像我们这种搞网络协议开发、修改的，经常就会遇到各种奇葩的网络协议，或者是自己拍脑瓜设计出来的网络协议，在调试的时候Wireshark不能正确解析，一个字节一个字节对着查那可真是看得眼都要瞎了。&lt;/p></description></item><item><title>Linux下安装Riverbed OPNET Modeler 18.6.1过程</title><link>https://jiacs.com/p/linux-opnet-installation-guide/</link><pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/linux-opnet-installation-guide/</guid><description>&lt;p>最近实验室要使用OPNET做仿真，但是无奈18.6在windows下的sitl接口一直有问题，没办法，只能尝试一下linux下的版本是否可以用。但是以前从来没在linux下装过OPNET，所以还是踩了一些坑，总结一下主要的安装步骤。&lt;/p></description></item><item><title>2017年终总结</title><link>https://jiacs.com/p/2017-conclusion/</link><pubDate>Tue, 09 Jan 2018 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/2017-conclusion/</guid><description>&lt;p>嗯，一眨眼2017年又过完了，第三年写年终总结了，从大二开始每年都写写年终，回头想想自己都干了点啥，但是每年立下的豪言壮语好像也并没有怎么实现过= = 不过总归是一种记录吧，毕竟我脑子也不好使，希望以后看到的时候能够记得自己都干过了啥。&lt;/p>
&lt;p>2017年，上了研究生，决定了读博，结束了单身，emmmm大概其实也就这么多，按时间整理一下流水账吧。&lt;/p></description></item><item><title>gitlab-ci中pip缓存的配置</title><link>https://jiacs.com/p/gitlab-ci-pip-cache/</link><pubDate>Thu, 06 Apr 2017 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/gitlab-ci-pip-cache/</guid><description>&lt;p>最近给实验室的Gitlab服务器开启了CI功能，采用的是docker模式，每次都启动一个全新的镜像进行构建。&lt;/p>
&lt;p>为了对Python代码进行风格检查，每次在构建的时候，都需要先在启动的容器中使用pip安装flake8。由于每次构建之间的环境相互隔离，所以pip的缓存也就完全没有作用，每次都需要直接联网下载相关的包来安装。&lt;/p></description></item><item><title>关注练习的效果——《刻意练习》读后感</title><link>https://jiacs.com/p/keyilianxi/</link><pubDate>Sun, 12 Feb 2017 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/keyilianxi/</guid><description>&lt;p>拖了好久，终于把《刻意练习》这本书看完了。&lt;/p>
&lt;p>作者说了好多，提到了好多的案例，最主要的还是为了证明自己的观点：“刻意”的练习才是最重要的。也就是说&lt;strong>相对于练习的时间，练习的效果更加重要&lt;/strong>。&lt;/p></description></item><item><title>2016年总结——又一年</title><link>https://jiacs.com/p/2016-conclusion/</link><pubDate>Mon, 19 Dec 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/2016-conclusion/</guid><description>&lt;p>一年又一年啊= =&lt;br>
过得好快，一眨眼2016又要过去了。&lt;/p>
&lt;p>是时候总结一下我的2016年了，总得来说感觉今年还算是收获的一年吧，毕竟结束了大三下学期，成为大四的学生了。同时今年也又经历了一次重大的人生抉择。&lt;/p></description></item><item><title>修改Laravel自带的认证系统的User类的命名空间</title><link>https://jiacs.com/p/laravel-user-namespace/</link><pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/laravel-user-namespace/</guid><description>&lt;p>刚创建了一个新的Laravel 5.3项目，想要使用Laravel自带的认证功能。&lt;/p></description></item><item><title>灵析的一个月总结</title><link>https://jiacs.com/p/first-month-at-lingxi/</link><pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/first-month-at-lingxi/</guid><description>&lt;p>转眼间，在灵析实习已经一个多月了。中间请了一个周的假参加夏令营，算起来总共待在灵析的时间也已经有5个周了。&lt;/p>
&lt;p>那么在这五个周里，我到底学到了什么呢？&lt;/p></description></item><item><title>laravel 路由缓存</title><link>https://jiacs.com/p/laravel-routing-cache/</link><pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/laravel-routing-cache/</guid><description>&lt;p>今天在调试Laravel时，发现Routes.php中定义的路由不起作用了！不管怎么修改，甚至删除，新修改的路由都不生效。&lt;/p></description></item><item><title>本科的期末考试结束了</title><link>https://jiacs.com/p/final-of-bachalor-ends/</link><pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/final-of-bachalor-ends/</guid><description>&lt;p>本科阶段的期末考试生涯在昨天结束了。&lt;/p></description></item><item><title>解决MySQL新建用户后无法登录问题</title><link>https://jiacs.com/p/mysql-user-user-cannot-login/</link><pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/mysql-user-user-cannot-login/</guid><description>&lt;p>今天在给一台电脑配置XAMPP的时候，在上面的PHPMyAdmin里创建了一个新的用户，并且创建了密码，但是却一直无法使用这个账户登录到MySQL里。&lt;/p></description></item><item><title>使用泛域名解析和Laravel路由实现用户自定义子域名</title><link>https://jiacs.com/p/custom-subdomain-using-laravel/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/custom-subdomain-using-laravel/</guid><description>&lt;p>前段时间看到有人给简书提供的建议里有一条是希望简书能够提供用户自定义子域名功能。作为一个攻城狮，自然就开始想到自己能够怎么实现这个功能，于是马上联想到了“泛域名解析”功能。再加上之前录制《Laravel 入门之路由》这门课程的时候，提到过的&lt;strong>子域名路由&lt;/strong>这个功能，马上就想到了针对用户自定义域名的解决方案。&lt;/p></description></item><item><title>Peterson算法中turn(will_wait)变量的作用</title><link>https://jiacs.com/p/peterson-algo-turn/</link><pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/peterson-algo-turn/</guid><description>&lt;p>最近在操作系统上学习了Peterson算法，其使用了3个变量就实现了纯软件的线程同步，即两个线程的标记变量&lt;code>c1&lt;/code>, &lt;code>c2&lt;/code>以及一个&lt;code>turn&lt;/code>变量。
但是对于其为什么要使用第三个变量还不是很了解，今天特意研究了一下，终于发现了第三个变量的作用。&lt;/p></description></item><item><title>PAT 1052 Linked List Sorting (25)</title><link>https://jiacs.com/p/pat-1052/</link><pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/pat-1052/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>A linked list consists of a series of structures, which are not necessarily adjacent in memory. We assume that each structure contains an integer key and a Next pointer to the next structure. Now given a linked list, you are supposed to sort the structures according to their key values in increasing order.&lt;/p></description></item><item><title>PAT 1051 Pop Sequence (25)</title><link>https://jiacs.com/p/pat-1051/</link><pubDate>Mon, 29 Feb 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/pat-1051/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>Given a stack which can keep M numbers at most. Push N numbers in the order of 1, 2, 3, &amp;hellip;, N and pop randomly. You are supposed to tell if a given sequence of numbers is a possible pop sequence of the stack. For example, if M is 5 and N is 7, we can obtain 1, 2, 3, 4, 5, 6, 7 from the stack, but not 3, 2, 1, 7, 5, 6, 4.&lt;/p></description></item><item><title>PAT-1047 Student List for Course (25)</title><link>https://jiacs.com/p/pat-1047/</link><pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/pat-1047/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>Zhejiang University has 40000 students and provides 2500 courses. Now given the registered course list of each student, you are supposed to output the student name lists of all the courses.&lt;/p></description></item><item><title>PAT 1033 To Fill or Not to Fill (25)</title><link>https://jiacs.com/p/pat-1033/</link><pubDate>Wed, 24 Feb 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/pat-1033/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>With highways available, driving a car from Hangzhou to any other city is easy. But since the tank capacity of a car is limited, we have to find gas stations on the way from time to time. Different gas station may give different price. You are asked to carefully design the cheapest route to go.&lt;/p></description></item><item><title>PAT 1048 Find Coins (25)</title><link>https://jiacs.com/p/pat-1048/</link><pubDate>Wed, 24 Feb 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/pat-1048/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>Eva loves to collect coins from all over the universe, including some other planets like Mars. One day she visited a universal shopping mall which could accept all kinds of coins as payments. However, there was a special requirement of the payment: for each bill, she could only use exactly two coins to pay the exact amount. Since she has as many as 105 coins with her, she definitely needs your help. You are supposed to tell her, for any given amount of money, whether or not she can find two coins to pay for it.&lt;/p></description></item><item><title>PAT 1039 Course List for Student(25)</title><link>https://jiacs.com/p/pat-1039/</link><pubDate>Tue, 23 Feb 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/pat-1039/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>Zhejiang University has 40000 students and provides 2500 courses. Now given the student name lists of all the courses, you are supposed to output the registered course list for each student who comes for a query.&lt;/p></description></item><item><title>2015の总结&amp;&amp;2016の计划</title><link>https://jiacs.com/p/2015-conclusion/</link><pubDate>Thu, 14 Jan 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/2015-conclusion/</guid><description>&lt;p>一眨眼，2015年就过去了。本来早就想总结一下自己的2015，但是最近一直忙着期末考试，一直没有腾出时间来，今天终于有点时间，可以好好地“总结过去，展望未来”了。&lt;/p></description></item><item><title>你真的知道谁给你发的邮件吗？——邮件发件人伪造</title><link>https://jiacs.com/p/fake-mail-sender/</link><pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/fake-mail-sender/</guid><description>&lt;p>一般来说，我们收到一封邮件之后，都会首先看发件人。有些重要的邮件，比如Apple给你发的重置密码邮件，手机丢失邮件等等，我们都会反复查验发件人，确认是真的来自Apple的官方，而不是钓鱼邮件。然而，如果这个发件人信息是可以伪造的，你还能知道是谁给你发的邮件吗？
前一段时间，学习SMTP邮件协议的时候，写了个简单的发件程序，却发现了一个很多邮箱都存在的发件人伪造问题。
想看伪造结果的，请直接拉到最下面看截图。&lt;/p></description></item><item><title>Floyd判圈算法（龟兔赛跑算法）</title><link>https://jiacs.com/p/floyd-algo/</link><pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/floyd-algo/</guid><description>&lt;h2 id="问题">问题：&lt;/h2>
&lt;p>如何判断一个链表是否有闭环？&lt;/p>
&lt;p>今天看到了这个问题，提到了Floyd判圈算法，于是去查了一下这个算法，把自己的一点想法写下来。&lt;/p></description></item><item><title>NSCTF2015部分题目解析</title><link>https://jiacs.com/p/nsctf-2015/</link><pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/nsctf-2015/</guid><description>&lt;p>前段时间做了NSCTF的比赛，做出了其中的几道题目，下面对几道题目的解题过程进行简单的分析。&lt;/p></description></item><item><title>8086汇编开发环境搭建</title><link>https://jiacs.com/p/8086-dev-env-build/</link><pubDate>Sun, 27 Sep 2015 00:00:00 +0000</pubDate><guid>https://jiacs.com/p/8086-dev-env-build/</guid><description>&lt;p>本学期开始学习汇编了，但是无奈学的东西都是好久之前的老知识了，在现在的电脑上实践起来略有困难，连&lt;code>debug&lt;/code>命令都没法用。
最后在参考老师给的资料和网上相关资料的基础上，完成了汇编开发环境的搭建，做下记录，以备后用。&lt;/p></description></item></channel></rss>