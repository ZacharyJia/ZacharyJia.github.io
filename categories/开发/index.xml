<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>开发 on Zachary's Blog</title><link>https://blog.zacharyjia.me/categories/%E5%BC%80%E5%8F%91/</link><description>Recent content in 开发 on Zachary's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 11 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.zacharyjia.me/categories/%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml"/><item><title>微信、支付宝个人收款的一种实现思路</title><link>https://blog.zacharyjia.me/p/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E4%B8%AA%E4%BA%BA%E6%94%B6%E6%AC%BE%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF/</link><pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E4%B8%AA%E4%BA%BA%E6%94%B6%E6%AC%BE%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF/</guid><description>&lt;p>题目里说的个人收款指的不是普通的扫个码，而是说那种可以支持回调的，例如网上商城支付之后，商城可以知道支付状态并且自动修改订单的状态为“已支付”。这种支付的形式，无论是微信、支付宝还是银联，目前都是不对个人开放的，必须有企业资质才能申请。但是对于很多开发者而言，有时候就是一个小小的验证性应用，想要拥有支付功能，而自己又没有企业资质，自然没法申请到微信支付宝这种接口，甚至连第三方的聚合支付（Ping++）也是无法申请的。本文就介绍一种利用个人支付宝（微信也是可以的）自己实现支付功能的思路，成本是一部旧的&lt;strong>安卓手机&lt;/strong>，其他的都是完全免费的，配合支付宝的收款码（提现免费），可以做到&lt;strong>零费率&lt;/strong>。&lt;/p></description></item><item><title>自己动手编写Wireshark Lua插件解析自定义协议</title><link>https://blog.zacharyjia.me/p/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E7%BC%96%E5%86%99wireshark-lua%E6%8F%92%E4%BB%B6%E8%A7%A3%E6%9E%90%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%8F%E8%AE%AE/</link><pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E7%BC%96%E5%86%99wireshark-lua%E6%8F%92%E4%BB%B6%E8%A7%A3%E6%9E%90%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%8F%E8%AE%AE/</guid><description>&lt;p>搞网络的对于 Wireshark 这个抓包工具应该非常熟悉了，在抓包分析的时候非常好用，很大的一个原因就是 Wireshark 内置了大量的协议解析插件，基本上你叫得上来的协议，Wireshark都能给你解析出来。&lt;/p>
&lt;p>但是啥事儿都有个万一，特别是像我们这种搞网络协议开发、修改的，经常就会遇到各种奇葩的网络协议，或者是自己拍脑瓜设计出来的网络协议，在调试的时候Wireshark不能正确解析，一个字节一个字节对着查那可真是看得眼都要瞎了。&lt;/p></description></item><item><title>Linux下安装Riverbed OPNET Modeler 18.6.1过程</title><link>https://blog.zacharyjia.me/p/linux%E4%B8%8B%E5%AE%89%E8%A3%85riverbed-opnet-modeler-18.6.1%E8%BF%87%E7%A8%8B/</link><pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/linux%E4%B8%8B%E5%AE%89%E8%A3%85riverbed-opnet-modeler-18.6.1%E8%BF%87%E7%A8%8B/</guid><description>&lt;p>最近实验室要使用OPNET做仿真，但是无奈18.6在windows下的sitl接口一直有问题，没办法，只能尝试一下linux下的版本是否可以用。但是以前从来没在linux下装过OPNET，所以还是踩了一些坑，总结一下主要的安装步骤。&lt;/p></description></item><item><title>gitlab-ci中pip缓存的配置</title><link>https://blog.zacharyjia.me/p/gitlab-ci%E4%B8%ADpip%E7%BC%93%E5%AD%98%E7%9A%84%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 06 Apr 2017 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/gitlab-ci%E4%B8%ADpip%E7%BC%93%E5%AD%98%E7%9A%84%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>最近给实验室的Gitlab服务器开启了CI功能，采用的是docker模式，每次都启动一个全新的镜像进行构建。&lt;/p>
&lt;p>为了对Python代码进行风格检查，每次在构建的时候，都需要先在启动的容器中使用pip安装flake8。由于每次构建之间的环境相互隔离，所以pip的缓存也就完全没有作用，每次都需要直接联网下载相关的包来安装。&lt;/p></description></item><item><title>修改Laravel自带的认证系统的User类的命名空间</title><link>https://blog.zacharyjia.me/p/%E4%BF%AE%E6%94%B9laravel%E8%87%AA%E5%B8%A6%E7%9A%84%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F%E7%9A%84user%E7%B1%BB%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</link><pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/%E4%BF%AE%E6%94%B9laravel%E8%87%AA%E5%B8%A6%E7%9A%84%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F%E7%9A%84user%E7%B1%BB%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</guid><description>&lt;p>刚创建了一个新的Laravel 5.3项目，想要使用Laravel自带的认证功能。&lt;/p></description></item><item><title>laravel 路由缓存</title><link>https://blog.zacharyjia.me/p/laravel-%E8%B7%AF%E7%94%B1%E7%BC%93%E5%AD%98/</link><pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/laravel-%E8%B7%AF%E7%94%B1%E7%BC%93%E5%AD%98/</guid><description>&lt;p>今天在调试Laravel时，发现Routes.php中定义的路由不起作用了！不管怎么修改，甚至删除，新修改的路由都不生效。&lt;/p></description></item><item><title>解决MySQL新建用户后无法登录问题</title><link>https://blog.zacharyjia.me/p/%E8%A7%A3%E5%86%B3mysql%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7%E5%90%8E%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/%E8%A7%A3%E5%86%B3mysql%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7%E5%90%8E%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/</guid><description>&lt;p>今天在给一台电脑配置XAMPP的时候，在上面的PHPMyAdmin里创建了一个新的用户，并且创建了密码，但是却一直无法使用这个账户登录到MySQL里。&lt;/p></description></item><item><title>使用泛域名解析和Laravel路由实现用户自定义子域名</title><link>https://blog.zacharyjia.me/p/%E4%BD%BF%E7%94%A8%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%92%8Claravel%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%90%E5%9F%9F%E5%90%8D/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/%E4%BD%BF%E7%94%A8%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%92%8Claravel%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%90%E5%9F%9F%E5%90%8D/</guid><description>&lt;p>前段时间看到有人给简书提供的建议里有一条是希望简书能够提供用户自定义子域名功能。作为一个攻城狮，自然就开始想到自己能够怎么实现这个功能，于是马上联想到了“泛域名解析”功能。再加上之前录制《Laravel 入门之路由》这门课程的时候，提到过的&lt;strong>子域名路由&lt;/strong>这个功能，马上就想到了针对用户自定义域名的解决方案。&lt;/p></description></item><item><title>Peterson算法中turn(will_wait)变量的作用</title><link>https://blog.zacharyjia.me/p/peterson%E7%AE%97%E6%B3%95%E4%B8%ADturnwill_wait%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8/</link><pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/peterson%E7%AE%97%E6%B3%95%E4%B8%ADturnwill_wait%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8/</guid><description>&lt;p>最近在操作系统上学习了Peterson算法，其使用了3个变量就实现了纯软件的线程同步，即两个线程的标记变量&lt;code>c1&lt;/code>, &lt;code>c2&lt;/code>以及一个&lt;code>turn&lt;/code>变量。
但是对于其为什么要使用第三个变量还不是很了解，今天特意研究了一下，终于发现了第三个变量的作用。&lt;/p></description></item><item><title>PAT 1052 Linked List Sorting (25)</title><link>https://blog.zacharyjia.me/p/pat-1052-linked-list-sorting-25/</link><pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/pat-1052-linked-list-sorting-25/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>A linked list consists of a series of structures, which are not necessarily adjacent in memory. We assume that each structure contains an integer key and a Next pointer to the next structure. Now given a linked list, you are supposed to sort the structures according to their key values in increasing order.&lt;/p></description></item><item><title>PAT 1051 Pop Sequence (25)</title><link>https://blog.zacharyjia.me/p/pat-1051-pop-sequence-25/</link><pubDate>Mon, 29 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/pat-1051-pop-sequence-25/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>Given a stack which can keep M numbers at most. Push N numbers in the order of 1, 2, 3, &amp;hellip;, N and pop randomly. You are supposed to tell if a given sequence of numbers is a possible pop sequence of the stack. For example, if M is 5 and N is 7, we can obtain 1, 2, 3, 4, 5, 6, 7 from the stack, but not 3, 2, 1, 7, 5, 6, 4.&lt;/p></description></item><item><title>PAT-1047 Student List for Course (25)</title><link>https://blog.zacharyjia.me/p/pat-1047-student-list-for-course-25/</link><pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/pat-1047-student-list-for-course-25/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>Zhejiang University has 40000 students and provides 2500 courses. Now given the registered course list of each student, you are supposed to output the student name lists of all the courses.&lt;/p></description></item><item><title>PAT 1033 To Fill or Not to Fill (25)</title><link>https://blog.zacharyjia.me/p/pat-1033-to-fill-or-not-to-fill-25/</link><pubDate>Wed, 24 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/pat-1033-to-fill-or-not-to-fill-25/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>With highways available, driving a car from Hangzhou to any other city is easy. But since the tank capacity of a car is limited, we have to find gas stations on the way from time to time. Different gas station may give different price. You are asked to carefully design the cheapest route to go.&lt;/p></description></item><item><title>PAT 1048 Find Coins (25)</title><link>https://blog.zacharyjia.me/p/pat-1048-find-coins-25/</link><pubDate>Wed, 24 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/pat-1048-find-coins-25/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>Eva loves to collect coins from all over the universe, including some other planets like Mars. One day she visited a universal shopping mall which could accept all kinds of coins as payments. However, there was a special requirement of the payment: for each bill, she could only use exactly two coins to pay the exact amount. Since she has as many as 105 coins with her, she definitely needs your help. You are supposed to tell her, for any given amount of money, whether or not she can find two coins to pay for it.&lt;/p></description></item><item><title>PAT 1039 Course List for Student(25)</title><link>https://blog.zacharyjia.me/p/pat-1039-course-list-for-student25/</link><pubDate>Tue, 23 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/pat-1039-course-list-for-student25/</guid><description>&lt;h2 id="题目要求">题目要求&lt;/h2>
&lt;p>Zhejiang University has 40000 students and provides 2500 courses. Now given the student name lists of all the courses, you are supposed to output the registered course list for each student who comes for a query.&lt;/p></description></item><item><title>你真的知道谁给你发的邮件吗？——邮件发件人伪造</title><link>https://blog.zacharyjia.me/p/%E4%BD%A0%E7%9C%9F%E7%9A%84%E7%9F%A5%E9%81%93%E8%B0%81%E7%BB%99%E4%BD%A0%E5%8F%91%E7%9A%84%E9%82%AE%E4%BB%B6%E5%90%97%E9%82%AE%E4%BB%B6%E5%8F%91%E4%BB%B6%E4%BA%BA%E4%BC%AA%E9%80%A0/</link><pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/%E4%BD%A0%E7%9C%9F%E7%9A%84%E7%9F%A5%E9%81%93%E8%B0%81%E7%BB%99%E4%BD%A0%E5%8F%91%E7%9A%84%E9%82%AE%E4%BB%B6%E5%90%97%E9%82%AE%E4%BB%B6%E5%8F%91%E4%BB%B6%E4%BA%BA%E4%BC%AA%E9%80%A0/</guid><description>&lt;p>一般来说，我们收到一封邮件之后，都会首先看发件人。有些重要的邮件，比如Apple给你发的重置密码邮件，手机丢失邮件等等，我们都会反复查验发件人，确认是真的来自Apple的官方，而不是钓鱼邮件。然而，如果这个发件人信息是可以伪造的，你还能知道是谁给你发的邮件吗？
前一段时间，学习SMTP邮件协议的时候，写了个简单的发件程序，却发现了一个很多邮箱都存在的发件人伪造问题。
想看伪造结果的，请直接拉到最下面看截图。&lt;/p></description></item><item><title>Floyd判圈算法（龟兔赛跑算法）</title><link>https://blog.zacharyjia.me/p/floyd%E5%88%A4%E5%9C%88%E7%AE%97%E6%B3%95%E9%BE%9F%E5%85%94%E8%B5%9B%E8%B7%91%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/floyd%E5%88%A4%E5%9C%88%E7%AE%97%E6%B3%95%E9%BE%9F%E5%85%94%E8%B5%9B%E8%B7%91%E7%AE%97%E6%B3%95/</guid><description>&lt;h2 id="问题">问题：&lt;/h2>
&lt;p>如何判断一个链表是否有闭环？&lt;/p>
&lt;p>今天看到了这个问题，提到了Floyd判圈算法，于是去查了一下这个算法，把自己的一点想法写下来。&lt;/p></description></item><item><title>NSCTF2015部分题目解析</title><link>https://blog.zacharyjia.me/p/nsctf2015%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%9E%90/</link><pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/nsctf2015%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%9E%90/</guid><description>&lt;p>前段时间做了NSCTF的比赛，做出了其中的几道题目，下面对几道题目的解题过程进行简单的分析。&lt;/p></description></item><item><title>8086汇编开发环境搭建</title><link>https://blog.zacharyjia.me/p/8086%E6%B1%87%E7%BC%96%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Sun, 27 Sep 2015 00:00:00 +0000</pubDate><guid>https://blog.zacharyjia.me/p/8086%E6%B1%87%E7%BC%96%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>&lt;p>本学期开始学习汇编了，但是无奈学的东西都是好久之前的老知识了，在现在的电脑上实践起来略有困难，连&lt;code>debug&lt;/code>命令都没法用。
最后在参考老师给的资料和网上相关资料的基础上，完成了汇编开发环境的搭建，做下记录，以备后用。&lt;/p></description></item></channel></rss>